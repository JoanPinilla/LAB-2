Function main
	Motor On
	Power Low
	
	Accel 50, 50
	Speed 50
	Do
 If Sw(9) Then
	Call paletizado_z
 EndIf
 If Sw(10) Then
	Call paletizado_s
 EndIf
 If Sw(11) Then
	Call paletizado_externo
 EndIf
Loop
	
Fend
Function Prueba1
	Do
		Go Origen
		Wait 0.5
		Go EjeX
		Wait 0.5
		Go EjeY
		Wait 0.5
		
		Move Origen
		Wait 0.5
		Move EjeX
		Wait 0.5
		Move EjeY
		Wait 0.5
		
	Loop
Fend

Function Prueba2
	Do
		Go Origen :Z(200)
		Go Origen
		Go Origen :Z(200)
		Wait 0.5
		Go EjeX :Z(200)
		Go EjeX
		Go EjeX :Z(200)
		Wait 0.5
		Go EjeY :Z(200)
		Go EjeY
		Go EjeY :Z(200)
		Wait 0.5
		
	Loop
Fend


Function paletizado_z
	
	#define estado_paletizado_z 11
	Integer i
	Pallet 1, Origen, EjeX, EjeY, 3, 3
	On estado_paletizado_z
	For i = 1 To 9
		Go Pallet(1, i) :Z(200)
		Go Pallet(1, i)
		Go Pallet(1, i) :Z(200)
	Next
	Off estado_paletizado_z
	
Fend



Function paletizado_s
	
	#define estado_paletizado_s 12
	Integer i
	Pallet 1, Origen, EjeX, EjeY, 3, 3
	On estado_paletizado_s
	For i = 1 To 3
		Go Pallet(1, i) :Z(200)
		Go Pallet(1, i)
		Go Pallet(1, i) :Z(200)
	Next
	For i = 6 To 4 Step -1
		Go Pallet(1, i) :Z(200)
		Go Pallet(1, i)
		Go Pallet(1, i) :Z(200)
	Next
	For i = 7 To 9
		Go Pallet(1, i) :Z(200)
		Go Pallet(1, i)
		Go Pallet(1, i) :Z(200)
	Next
	Off estado_paletizado_s
	
Fend



Function paletizado_externo
	Pallet Outside, 2, Origen, EjeY, EjeX, 3, 3
	#define estado_paletizado_ex 13
	Integer i
	Integer j
	
	On estado_paletizado_ex
	For i = 1 To 4
		For j = 1 To 4
		Go Pallet(2, i, j) :Z(200)
		Go Pallet(2, i, j)
		Go Pallet(2, i, j) :Z(200)
		Next
	Next
	Off estado_paletizado_ex
	
Fend

